name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: wordflux
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: wordflux/package-lock.json

      - name: Get Playwright version
        id: pw
        run: echo "version=$(node -p \"require('./package.json').devDependencies.playwright\")" >> $GITHUB_OUTPUT

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.pw.outputs.version }}

      - name: Install dependencies
        run: npm ci

      - name: Cache Next.js build cache
        uses: actions/cache@v4
        with:
          path: wordflux/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('wordflux/package-lock.json') }}

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Lint
        run: npm run lint

      - name: Build app
        run: npm run build

      - name: Start Next server (3000)
        run: nohup npm run start -- -p 3000 >/dev/null 2>&1 & echo $! > .next-server.pid

      - name: Wait for server
        run: |
          for i in {1..60}; do
            if curl -sf http://localhost:3000/api/health >/dev/null; then echo "up"; break; fi; sleep 1;
          done

      - name: Verify app health
        run: node verify-health.js

      - name: E2E Tests
        env:
          UI_TESTS: 1
          BASE_URL: http://localhost:3000
        run: npm run test:e2e

      - name: Stop Next server
        if: always()
        run: |
          if [ -f .next-server.pid ]; then kill $(cat .next-server.pid) || true; fi

  ui-e2e:
    if: ${{ vars.UI_TESTS == '1' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: wordflux
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: wordflux/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Cache Next.js build cache
        uses: actions/cache@v4
        with:
          path: wordflux/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('wordflux/package-lock.json') }}

      - name: Get Playwright version
        id: pw
        run: echo "version=$(node -p \"require('./package.json').devDependencies.playwright\")" >> $GITHUB_OUTPUT

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.pw.outputs.version }}

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Build app
        run: npm run build

      - name: Start Next server (3000)
        run: nohup npm run start -- -p 3000 >/dev/null 2>&1 & echo $! > .next-server.pid

      - name: Wait for server
        run: |
          for i in {1..60}; do
            if curl -sf http://localhost:3000/api/health >/dev/null; then echo "up"; break; fi; sleep 1;
          done

      - name: Verify app health
        run: node verify-health.js

      - name: Run UI E2E with HTML report
        env:
          UI_TESTS: 1
          BASE_URL: http://localhost:3000
          PLAYWRIGHT_HTML_REPORT: playwright-report
        run: npx playwright test --reporter=html

      - name: Stop Next server
        if: always()
        run: |
          if [ -f .next-server.pid ]; then kill $(cat .next-server.pid) || true; fi

      - name: Upload Playwright HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: wordflux/playwright-report
          retention-days: 7
